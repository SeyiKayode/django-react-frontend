{"version":3,"sources":["serviceWorker.js","http-common.js","services/tutorial-service.js","components/add-tutorial.js","components/tutorial.js","components/tutorials-list.js","components/login.js","components/signup.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","axiosInstance","axios","create","baseURL","timeout","headers","localStorage","getItem","interceptors","response","use","error","originalRequest","config","status","url","href","Promise","reject","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","e","get","id","put","delete","title","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","description","published","submitted","this","setState","target","value","TutorialDataService","className","onClick","htmlFor","type","name","onChange","required","Component","Tutorial","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","params","prevState","update","history","push","TutorialList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByTitle","placeholder","map","key","to","Login","handleChange","handleSubmit","username","password","redirect","errors","preventDefault","style","color","withRouter","Signup","email","App","handleLogout","removeItem","access_token","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+FChBAC,E,OAAgBC,EAAMC,OAAO,CAC/BC,QAAS,4CACTC,QAAS,IACTC,QAAS,CACL,cAAiB,OAASC,aAAaC,QAAQ,gBAC/C,eAAgB,mBAChB,OAAU,sBAIlBP,EAAcQ,aAAaC,SAASC,KAChC,SAAAD,GAAQ,OAAIA,KACZ,SAAAE,GACI,IAAMC,EAAkBD,EAAME,OAE9B,GAA8B,MAA1BF,EAAMF,SAASK,QAAkBF,EAAgBG,MAAQf,EAAcG,QAAQ,gBAE/E,OADAP,OAAOC,SAASmB,KAAO,UAChBC,QAAQC,OAAOP,GAG1B,GAAiC,oBAA7BA,EAAMF,SAASU,KAAKC,MACE,MAA1BT,EAAMF,SAASK,QAAgD,iBAA9BH,EAAMF,SAASY,WAA+B,CAC3E,IAAMC,EAAehB,aAAaC,QAAQ,iBAE1C,GAAIe,EAAc,CACd,IAAMC,EAAaC,KAAKC,MAAMC,KAAKJ,EAAaK,MAAM,KAAK,KAErDC,EAAMC,KAAKC,KAAKC,KAAKH,MAAQ,KAGnC,GAFAI,QAAQC,IAAIV,EAAWW,KAEnBX,EAAWW,IAAMN,EACjB,OAAO5B,EACNmC,KAAK,kBAAmB,CAACC,QAASd,IAClCe,MAAK,SAAA5B,GAKF,OAJAH,aAAagC,QAAQ,eAAgB7B,EAASU,KAAKoB,QACnDjC,aAAagC,QAAQ,gBAAiB7B,EAASU,KAAKiB,SACpDpC,EAAcwC,SAASnC,QAAvB,cAAkD,OAASI,EAASU,KAAKoB,OACzE3B,EAAgBP,QAAhB,cAA2C,OAASI,EAASU,KAAKoB,OAC3DvC,EAAcY,MAExB6B,OAAM,SAAAC,GACHV,QAAQC,IAAIS,MAGhBV,QAAQC,IAAI,2BAA4BV,EAAWW,IAAKN,GACxDhC,OAAOC,SAASmB,KAAO,eAG3BgB,QAAQC,IAAI,+BACZrC,OAAOC,SAASmB,KAAO,UAG/B,OAAOC,QAAQC,OAAOP,MAIfX,QCjCA,M,iGArBP,OAAOA,EAAc2C,IAAd,gB,0BAEPC,GACA,OAAO5C,EAAc2C,IAAd,qBAAgCC,M,6BAEpCzB,GACH,OAAOnB,EAAcmC,KAAd,aAAiChB,K,6BAErCyB,EAAIzB,GACP,OAAOnB,EAAc6C,IAAd,qBAAgCD,GAAMzB,K,6BAE1CyB,GACH,OAAO5C,EAAc8C,OAAd,qBAAmCF,M,kCAG1C,OAAO5C,EAAc8C,OAAd,gB,kCAECC,GACR,OAAO/C,EAAc2C,IAAd,2BAAsCI,Q,MCsFtCC,E,kDAxGX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBAEnB,EAAKI,MAAQ,CACTX,GAAI,KACJG,MAAO,GACPS,YAAa,GACbC,WAAW,EAEXC,WAAW,GAbD,E,0DAiBJhB,GACViB,KAAKC,SAAS,CACVb,MAAOL,EAAEmB,OAAOC,U,0CAIJpB,GAChBiB,KAAKC,SAAS,CACVJ,YAAad,EAAEmB,OAAOC,U,qCAIf,IAAD,OACJ3C,EAAO,CACT4B,MAAOY,KAAKJ,MAAMR,MAClBS,YAAaG,KAAKJ,MAAMC,aAG5BO,EAAoB7D,OAAOiB,GAC1BkB,MAAK,SAAA5B,GACF,EAAKmD,SAAS,CACVhB,GAAInC,EAASU,KAAKyB,GAClBG,MAAOtC,EAASU,KAAK4B,MACrBS,YAAa/C,EAASU,KAAKqC,YAC3BC,UAAWhD,EAASU,KAAKsC,UAEzBC,WAAW,IAEf1B,QAAQC,IAAIxB,EAASU,SAExBsB,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,oCAKhBiB,KAAKC,SAAS,CACVhB,GAAI,KACJG,MAAO,GACPS,YAAa,GACbC,WAAW,EAEXC,WAAW,M,+BAKf,OACI,yBAAKM,UAAU,eACVL,KAAKJ,MAAMG,UACR,6BACI,2DACA,4BAAQM,UAAU,kBAAkBC,QAASN,KAAKL,aAAlD,QAGJ,6BACI,yBAAKU,UAAU,cACX,2BAAOE,QAAQ,SAAf,SACA,2BACAC,KAAK,OACLH,UAAU,eACVpB,GAAG,QACHwB,KAAK,QACLN,MAAOH,KAAKJ,MAAMR,MAClBsB,SAAUV,KAAKT,cACfoB,UAAQ,KAGZ,yBAAKN,UAAU,cACX,2BAAOE,QAAQ,eAAf,eACA,2BACAC,KAAK,OACLH,UAAU,eACVpB,GAAG,cACHwB,KAAK,cACLN,MAAOH,KAAKJ,MAAMC,YAClBa,SAAUV,KAAKP,oBACfkB,UAAQ,KAGZ,4BAAQL,QAASN,KAAKN,aAAcW,UAAU,mBAA9C,gB,GAlGEO,a,QCoKXC,E,kDAnKX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKsB,YAAc,EAAKA,YAAYtB,KAAjB,gBACnB,EAAKuB,gBAAkB,EAAKA,gBAAgBvB,KAArB,gBACvB,EAAKwB,eAAiB,EAAKA,eAAexB,KAApB,gBACtB,EAAKyB,eAAiB,EAAKA,eAAezB,KAApB,gBAEtB,EAAKI,MAAQ,CACTsB,gBAAiB,CACbjC,GAAI,KACJG,MAAO,GACPS,YAAa,GACbC,WAAW,GAEfqB,QAAS,IAhBC,E,gEAqBdnB,KAAKc,YAAYd,KAAKV,MAAMlD,MAAMgF,OAAOnC,M,oCAG/BF,GACV,IAAMK,EAAQL,EAAEmB,OAAOC,MAEvBH,KAAKC,UAAS,SAACoB,GACX,MAAO,CACHH,gBAAgB,2BACTG,EAAUH,iBADF,IAEX9B,MAAOA,U,0CAMHL,GAChB,IAAMc,EAAcd,EAAEmB,OAAOC,MAE7BH,KAAKC,UAAS,SAACoB,GACX,MAAO,CACHH,gBAAgB,2BACTG,EAAUH,iBADF,IAEXrB,YAAaA,U,kCAMjBZ,GAAI,IAAD,OACXmB,EAAoBpB,IAAIC,GACvBP,MAAK,SAAA5B,GACF,EAAKmD,SAAS,CACViB,gBAAiBpE,EAASU,OAE9Ba,QAAQC,IAAIxB,EAASU,SAExBsB,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,sCAIJ5B,GAAQ,IAAD,OACbK,EAAO,CACTyB,GAAIe,KAAKJ,MAAMsB,gBAAgBjC,GAC/BG,MAAOY,KAAKJ,MAAMsB,gBAAgB9B,MAClCS,YAAaG,KAAKJ,MAAMsB,gBAAgBrB,YACxCC,UAAW3C,GAGfiD,EAAoBkB,OAAOtB,KAAKJ,MAAMsB,gBAAgBjC,GAAIzB,GACzDkB,MAAK,SAAA5B,GACF,EAAKmD,UAAS,SAACoB,GACX,MAAO,CACHH,gBAAgB,2BACTG,EAAUH,iBADF,IAEXpB,UAAW3C,QAIvBkB,QAAQC,IAAIxB,EAASU,SAExBsB,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,uCAIH,IAAD,OACZqB,EAAoBkB,OAAOtB,KAAKJ,MAAMsB,gBAAgBjC,GAAIe,KAAKJ,MAAMsB,iBACpExC,MAAK,SAAA5B,GACFuB,QAAQC,IAAIxB,EAASU,MACrB,EAAKyC,SAAS,CACVkB,QAAS,8CAGhBrC,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,uCAIH,IAAD,OACZqB,EAAoBjB,OAAOa,KAAKJ,MAAMsB,gBAAgBjC,IACrDP,MAAK,SAAA5B,GACFuB,QAAQC,IAAIxB,EAASU,MACrB,EAAK8B,MAAMiC,QAAQC,KAAK,iBAE3B1C,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,+BAIX,IAAD,OACGmC,EAAmBlB,KAAKJ,MAAxBsB,gBAEP,OACI,6BACKA,EACG,yBAAKb,UAAU,aACX,wCACA,8BACI,yBAAKA,UAAU,cACX,2BAAOE,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOH,UAAU,eAAepB,GAAG,QAC/CkB,MAAOe,EAAgB9B,MAAOsB,SAAUV,KAAKT,iBAEjD,yBAAKc,UAAU,cACX,2BAAOE,QAAQ,eAAf,eACA,2BAAOC,KAAK,OAAOH,UAAU,eAAepB,GAAG,cAC/CkB,MAAOe,EAAgBrB,YAAaa,SAAUV,KAAKP,uBAEvD,yBAAKY,UAAU,cACX,+BACI,4CAEHa,EAAgBpB,UAAY,YAAc,YAIlDoB,EAAgBpB,UACb,4BAAQO,UAAU,2BAClBC,QAAS,kBAAK,EAAKS,iBAAgB,KADnC,aAGA,4BAAQV,UAAU,2BAClBC,QAAS,kBAAK,EAAKS,iBAAgB,KADnC,WAIJ,4BAAQV,UAAU,0BAClBC,QAASN,KAAKiB,gBADd,UAEA,4BAAQT,KAAK,SAASH,UAAU,sBAChCC,QAASN,KAAKgB,gBADd,UAEA,2BAAIhB,KAAKJ,MAAMuB,UAGnB,6BACI,6BACA,kE,GA7JDP,aC+JRa,E,kDA7JX,WAAYnC,GAAO,IAAD,8BACd,cAAMA,IACDoC,oBAAsB,EAAKA,oBAAoBlC,KAAzB,gBAC3B,EAAKmC,kBAAoB,EAAKA,kBAAkBnC,KAAvB,gBACzB,EAAKoC,YAAc,EAAKA,YAAYpC,KAAjB,gBACnB,EAAKqC,kBAAoB,EAAKA,kBAAkBrC,KAAvB,gBACzB,EAAKsC,mBAAqB,EAAKA,mBAAmBtC,KAAxB,gBAC1B,EAAKuC,YAAc,EAAKA,YAAYvC,KAAjB,gBAEnB,EAAKI,MAAQ,CACToC,UAAW,GACXd,gBAAiB,KACjBe,cAAe,EACfF,YAAa,IAbH,E,gEAkBd/B,KAAK2B,sB,0CAGW5C,GAChB,IAAMgD,EAAchD,EAAEmB,OAAOC,MAE7BH,KAAKC,SAAS,CACV8B,YAAaA,M,0CAID,IAAD,OACf3B,EAAoB8B,SACnBxD,MAAK,SAAA5B,GACF,EAAKmD,SAAS,CACV+B,UAAWlF,EAASU,OAExBa,QAAQC,IAAIxB,EAASU,SAExBsB,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,oCAKhBiB,KAAK2B,oBACL3B,KAAKC,SAAS,CACViB,gBAAiB,KACjBe,cAAe,M,wCAILE,EAAUC,GACxBpC,KAAKC,SAAS,CACViB,gBAAiBiB,EACjBF,aAAcG,M,2CAID,IAAD,OAChBhC,EAAoBiC,YACnB3D,MAAK,SAAA5B,GACFuB,QAAQC,IAAIxB,EAASU,MACrB,EAAKoE,iBAER9C,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,oCAIN,IAAD,OACTqB,EAAoBkC,YAAYtC,KAAKJ,MAAMmC,aAC1CrD,MAAK,SAAA5B,GACF,EAAKmD,SAAS,CACV+B,UAAWlF,EAASU,OAExBa,QAAQC,IAAIxB,EAASU,SAExBsB,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,+BAIX,IAAD,SAC4DiB,KAAKJ,MAA9DmC,EADH,EACGA,YAAaE,EADhB,EACgBA,aAAcf,EAD9B,EAC8BA,gBAAiBc,EAD/C,EAC+CA,UAEnD,OACI,yBAAK3B,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACX,2BACAG,KAAK,OACLH,UAAU,eACVkC,YAAY,kBACZpC,MAAO4B,EACPrB,SAAUV,KAAK0B,sBAEf,yBAAKrB,UAAU,sBACX,4BAAQG,KAAK,SAASH,UAAU,4BAChCC,QAASN,KAAK+B,aADd,aAMZ,yBAAK1B,UAAU,YACX,8CACA,wBAAIA,UAAU,cACT2B,GAAaA,EAAUQ,KAAI,SAACL,EAAUC,GAAX,OACxB,wBACA/B,UAAW,oBAAsB+B,IAAUH,EAAe,SAAW,IACrE3B,QAAS,kBAAK,EAAKuB,kBAAkBM,EAAUC,IAAQK,IAAKL,GACvDD,EAAS/C,WAKtB,4BAAQiB,UAAU,4BAClBC,QAASN,KAAK8B,oBADd,eAIJ,yBAAKzB,UAAU,YACVa,EACG,6BACI,wCACA,6BACI,+BACI,2CACK,IACRA,EAAgB9B,OAErB,6BACI,+BACI,iDACK,IACR8B,EAAgBrB,aAErB,6BACI,+BACI,4CACK,IACRqB,EAAgBpB,UAAY,YAAc,WAG/C,kBAAC,IAAD,CAAM4C,GAAE,qBAAgBxB,EAAgBjC,IACxCoB,UAAU,uBADV,SAMJ,6BACI,6BACA,mE,GAtJDO,a,QCArB+B,E,kDACF,WAAYrD,GAAO,IAAD,8BACd,cAAMA,IACDsD,aAAe,EAAKA,aAAapD,KAAlB,gBACpB,EAAKqD,aAAe,EAAKA,aAAarD,KAAlB,gBAEpB,EAAKI,MAAQ,CACTkD,SAAU,GACVC,SAAU,GACVC,SAAU,KACVC,OAAQ,GACR9B,QAAS,IAVC,E,yDAcLpC,GACTiB,KAAKC,SAAL,eACKlB,EAAEmB,OAAOO,KAAO1B,EAAEmB,OAAOC,U,mCAIrBpB,GAAG,IAAD,OACXA,EAAEmE,iBACF7G,EAAcmC,KAAK,iBAAkB,CACjCsE,SAAU9C,KAAKJ,MAAMkD,SACrBC,SAAU/C,KAAKJ,MAAMmD,WAExBrE,MAAK,SAAA5B,GACFT,EAAcwC,SAASnC,QAAvB,cAAkD,OAASI,EAASU,KAAKoB,OACzEjC,aAAagC,QAAQ,eAAgB7B,EAASU,KAAKoB,QACnDjC,aAAagC,QAAQ,gBAAiB7B,EAASU,KAAKiB,SACpD,EAAKwB,SAAS,CACV6C,SAAU,GACVC,SAAU,GACVC,SAAU,SAGjBlE,OAAM,SAAAC,GACHV,QAAQC,IAAIS,GACZ,EAAKkB,SAAS,CACVgD,OAAQlE,EAAEjC,SAASU,KACnB2D,QAAQ,oD,+BAMhB,OAAInB,KAAKJ,MAAMoD,SACJ,kBAAC,IAAD,CAAUN,GAAI1C,KAAKJ,MAAMoD,WAIhC,yBAAK3C,UAAU,eACX,0CACA,6BACC,uBAAG8C,MAAO,CAACC,MAAO,QAASpD,KAAKJ,MAAMqD,OAASjD,KAAKJ,MAAMuB,QAAU,MACrE,8BACI,yBAAKd,UAAU,cACf,2CAEI,2BAAOA,UAAU,eAAeG,KAAK,OAAOC,KAAK,WAAWN,MAAOH,KAAKJ,MAAMkD,SAC9EpC,SAAUV,KAAK4C,eACf,uBAAGO,MAAO,CAACC,MAAO,QAASpD,KAAKJ,MAAMqD,OAAOH,SAAW9C,KAAKJ,MAAMqD,OAAOH,SAAW,QAGzF,yBAAKzC,UAAU,cACf,2CAEI,2BAAOA,UAAU,eAAgBG,KAAK,WAAWC,KAAK,WAAWN,MAAOH,KAAKJ,MAAMmD,SACnFrC,SAAUV,KAAK4C,eACf,uBAAGO,MAAO,CAACC,MAAO,QAASpD,KAAKJ,MAAMqD,OAAOF,SAAW/C,KAAKJ,MAAMqD,OAAOF,SAAW,QAGzF,qDAA0B,kBAAC,IAAD,CAAML,GAAE,WAAR,aAC1B,4BAAQrC,UAAU,kBAAkBC,QAASN,KAAK6C,cAAlD,e,GA1EAjC,aAgFLyC,cAAWV,GChFpBW,E,kDACF,WAAYhE,GAAO,IAAD,8BACd,cAAMA,IACDsD,aAAe,EAAKA,aAAapD,KAAlB,gBACpB,EAAKqD,aAAe,EAAKA,aAAarD,KAAlB,gBAEpB,EAAKI,MAAQ,CACTkD,SAAU,GACVC,SAAU,GACVQ,MAAO,GACPP,SAAU,KACVC,OAAQ,IAVE,E,yDAcLlE,GACTiB,KAAKC,SAAL,eACKlB,EAAEmB,OAAOO,KAAO1B,EAAEmB,OAAOC,U,mCAIrBpB,GAAG,IAAD,OACXA,EAAEmE,iBACF7G,EAAcmC,KAAK,gBAAiB,CAChCsE,SAAU9C,KAAKJ,MAAMkD,SACrBS,MAAOvD,KAAKJ,MAAM2D,MAClBR,SAAU/C,KAAKJ,MAAMmD,WAExBrE,MAAK,SAAA5B,GAMF,OALA,EAAKmD,SAAS,CACV6C,SAAU,GACVC,SAAU,GACVC,SAAU,WAEPlG,KAEVgC,OAAM,SAAAC,GACHV,QAAQC,IAAIS,GACZ,EAAKkB,SAAS,CACVgD,OAAQlE,EAAEjC,SAASU,Y,+BAM3B,OAAIwC,KAAKJ,MAAMoD,SACJ,kBAAC,IAAD,CAAUN,GAAI1C,KAAKJ,MAAMoD,WAIhC,yBAAK3C,UAAU,eACX,2CACA,6BACA,8BACA,yBAAKA,UAAU,cACX,2CAEI,2BAAOA,UAAU,eAAeG,KAAK,OAAOC,KAAK,WAAWN,MAAOH,KAAKJ,MAAMkD,SAC9EpC,SAAUV,KAAK4C,eACf,uBAAGO,MAAO,CAACC,MAAO,QAASpD,KAAKJ,MAAMqD,OAAOH,SAAW9C,KAAKJ,MAAMqD,OAAOH,SAAW,QAGzF,yBAAKzC,UAAU,cACf,wCAEI,2BAAOA,UAAU,eAAeG,KAAK,QAAQC,KAAK,QAAQN,MAAOH,KAAKJ,MAAM2D,MAC5E7C,SAAUV,KAAK4C,eACf,uBAAGO,MAAO,CAACC,MAAO,QAASpD,KAAKJ,MAAMqD,OAAOM,MAAQvD,KAAKJ,MAAMqD,OAAOM,MAAQ,QAGnF,yBAAKlD,UAAU,cACf,2CAEI,2BAAOA,UAAU,eAAeG,KAAK,WAAWC,KAAK,WAAWN,MAAOH,KAAKJ,MAAMmD,SAClFrC,SAAUV,KAAK4C,eACf,uBAAGO,MAAO,CAACC,MAAO,QAASpD,KAAKJ,MAAMqD,OAAOF,SAAW/C,KAAKJ,MAAMqD,OAAOF,SAAW,QAGzF,uDAA4B,kBAAC,IAAD,CAAML,GAAE,UAAR,UAC5B,4BAAQrC,UAAU,kBAAkBC,QAASN,KAAK6C,cAAlD,gB,GA/ECjC,aAqFNyC,cAAWC,GC9EpBE,E,kDACF,WAAYlE,GAAO,IAAD,8BACd,cAAMA,IACDmE,aAAe,EAAKA,aAAajE,KAAlB,gBAEpB,EAAKI,MAAQ,CACToD,SAAU,MALA,E,oMAWa3G,EAAcmC,KAAK,cAAe,CACrD,cAAiB7B,aAAaC,QAAQ,mB,cADpCE,E,OAGNH,aAAa+G,WAAW,gBACxB/G,aAAa+G,WAAW,iBACxBrH,EAAcwC,SAASnC,QAAvB,cAAkD,KAClDsD,KAAKC,SAAS,CACV+C,SAAUhD,KAAKV,MAAMiC,QAAQC,KAAK,Y,kBAE/B1E,G,kCAEPuB,QAAQC,IAAR,M,+IAKJ,GAAI0B,KAAKJ,MAAMoD,SACX,OAAO,kBAAC,IAAD,CAAUN,GAAI1C,KAAKJ,MAAMoD,WAGpC,IAAMW,EAAehH,aAAaC,QAAQ,gBAE1C,OACI,6BACI,yBAAKyD,UAAU,4CACX,uBAAGhD,KAAK,IAAIgD,UAAU,gBAAtB,QACKsD,EACG,yBAAKtD,UAAU,sBACf,wBAAIA,UAAU,YAClB,kBAAC,IAAD,CAAMqC,GAAE,aAAgBrC,UAAU,YAAlC,cAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMqC,GAAE,OAAUrC,UAAU,YAA5B,QAEJ,4BAAQpB,GAAG,aAAaoB,UAAU,yBAClCC,QAASN,KAAKyD,cADd,WAIQ,yBAAKpD,UAAU,sBACf,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAMqC,GAAE,SAAYrC,UAAU,YAA9B,UAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMqC,GAAE,UAAarC,UAAU,YAA/B,aAMZ,yBAAKA,UAAU,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAM,CAAC,IAAK,cAAeC,UAAWrC,IACnD,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,OAAOC,UAAWzE,IACpC,kBAAC,IAAD,CAAOwE,KAAK,iBAAiBC,UAAWjD,IACxC,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAM,SAAUC,UAAWnB,IACxC,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAM,UAAWC,UAAWR,W,GAnE/C1C,aA0EHyC,cAAWG,GC/E1BO,IAASC,OACP,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,STyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdzF,OAAM,SAAA9B,GACLqB,QAAQrB,MAAMA,EAAMmE,c","file":"static/js/main.b91b3374.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"https://djangoreact-api.herokuapp.com/api\",\r\n    timeout: 5000,\r\n    headers: {\r\n        \"Authorization\": \"JWT \" + localStorage.getItem(\"access_token\"),\r\n        \"Content-type\": \"application/json\",\r\n        \"accept\": \"application/json\"\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        const originalRequest = error.config;\r\n\r\n        if (error.response.status === 401 && originalRequest.url === axiosInstance.baseURL+'token/refresh') {\r\n            window.location.href = '/login/';\r\n            return Promise.reject(error)\r\n        }\r\n\r\n        if (error.response.data.code === \"token_not_valid\" && \r\n        error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\r\n            const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n            if (refreshToken) {\r\n                const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n\r\n                const now = Math.ceil(Date.now() / 1000);\r\n                console.log(tokenParts.exp);\r\n\r\n                if (tokenParts.exp > now) {\r\n                    return axiosInstance\r\n                    .post('/token/refresh/', {refresh: refreshToken})\r\n                    .then(response => {\r\n                        localStorage.setItem(\"access_token\", response.data.access);\r\n                        localStorage.setItem(\"refresh_token\", response.data.refresh);\r\n                        axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + response.data.access;\r\n                        originalRequest.headers[\"Authorization\"] = \"JWT \" + response.data.access;\r\n                        return axiosInstance(originalRequest)\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n                } else {\r\n                    console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n                    window.location.href = '/login/'\r\n                }\r\n            } else {\r\n                console.log(\"Refresh token not available\")\r\n                window.location.href = '/login/';\r\n            }\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default axiosInstance;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axiosInstance from \"../http-common\";\r\n\r\nclass TutorialDataService {\r\n    getAll(){\r\n        return axiosInstance.get(`/tutorials`)\r\n    }\r\n    get(id){\r\n        return axiosInstance.get(`/tutorials/${id}`)\r\n    }\r\n    create(data){\r\n        return axiosInstance.post(`/tutorials`, data)\r\n    }\r\n    update(id, data){\r\n        return axiosInstance.put(`/tutorials/${id}`, data)\r\n    }\r\n    delete(id){\r\n        return axiosInstance.delete(`/tutorials/${id}`)\r\n    }\r\n    deleteAll(){\r\n        return axiosInstance.delete(`/tutorials`)\r\n    }\r\n    findByTitle(title){\r\n        return axiosInstance.get(`/tutorials?title=${title}`)\r\n    }\r\n};\r\nexport default new TutorialDataService();","import React, {Component} from \"react\";\r\nimport TutorialDataService from \"../services/tutorial-service\";\r\n\r\nclass AddTutorial extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.saveTutorial = this.saveTutorial.bind(this);\r\n        this.newTutorial = this.newTutorial.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            published: false,\r\n\r\n            submitted: false\r\n        }\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    };\r\n\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    };\r\n\r\n    saveTutorial(){\r\n        const data = {\r\n            title: this.state.title,\r\n            description: this.state.description\r\n        }\r\n\r\n        TutorialDataService.create(data)\r\n        .then(response => {\r\n            this.setState({\r\n                id: response.data.id,\r\n                title: response.data.title,\r\n                description: response.data.description,\r\n                published: response.data.published,\r\n\r\n                submitted: true\r\n            })\r\n            console.log(response.data)\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    newTutorial(){\r\n        this.setState({\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            published: false,\r\n\r\n            submitted: false\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"submit-form\">\r\n                {this.state.submitted ? (\r\n                    <div>\r\n                        <h4>You submitted successfully!</h4>\r\n                        <button className=\"btn btn-success\" onClick={this.newTutorial}>Add</button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={this.state.title}\r\n                            onChange={this.onChangeTitle}\r\n                            required />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChangeDescription}\r\n                            required />\r\n                        </div>\r\n\r\n                        <button onClick={this.saveTutorial} className=\"btn btn-success\">Submit</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default AddTutorial;","import React, {Component} from \"react\";\r\nimport TutorialDataService from \"../services/tutorial-service\";\r\n\r\nclass Tutorial extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.getTutorial = this.getTutorial.bind(this);\r\n        this.updatePublished = this.updatePublished.bind(this);\r\n        this.updateTutorial = this.updateTutorial.bind(this);\r\n        this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n        this.state = {\r\n            currentTutorial: {\r\n                id: null,\r\n                title: \"\",\r\n                description: \"\",\r\n                published: false,\r\n            },\r\n            message: \"\"\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getTutorial(this.props.match.params.id)\r\n    };\r\n\r\n    onChangeTitle(e){\r\n        const title = e.target.value;\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                currentTutorial: {\r\n                    ...prevState.currentTutorial,\r\n                    title: title\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    onChangeDescription(e){\r\n        const description = e.target.value;\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                currentTutorial: {\r\n                    ...prevState.currentTutorial,\r\n                    description: description\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    getTutorial(id){\r\n        TutorialDataService.get(id)\r\n        .then(response => {\r\n            this.setState({\r\n                currentTutorial: response.data\r\n            })\r\n            console.log(response.data)\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    updatePublished(status){\r\n        const data = {\r\n            id: this.state.currentTutorial.id,\r\n            title: this.state.currentTutorial.title,\r\n            description: this.state.currentTutorial.description,\r\n            published: status \r\n        };\r\n\r\n        TutorialDataService.update(this.state.currentTutorial.id, data)\r\n        .then(response => {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    currentTutorial: {\r\n                        ...prevState.currentTutorial,\r\n                        published: status \r\n                    }\r\n                }\r\n            })\r\n            console.log(response.data)\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    updateTutorial(){\r\n        TutorialDataService.update(this.state.currentTutorial.id, this.state.currentTutorial)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            this.setState({\r\n                message: \"The tutorial was updated successfully!\"\r\n            })\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    deleteTutorial(){\r\n        TutorialDataService.delete(this.state.currentTutorial.id)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            this.props.history.push(\"/tutorials\")\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    render(){\r\n        const {currentTutorial} = this.state\r\n\r\n        return(\r\n            <div>\r\n                {currentTutorial ? (\r\n                    <div className=\"edit-form\">\r\n                        <h4>Tutorial</h4>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"title\"\r\n                                value={currentTutorial.title} onChange={this.onChangeTitle} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"description\">Description</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"description\"\r\n                                value={currentTutorial.description} onChange={this.onChangeDescription} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    <strong>Status:</strong>\r\n                                </label>\r\n                                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n                            </div>\r\n                        </form>\r\n\r\n                        {currentTutorial.published ? (\r\n                            <button className=\"badge badge-primary mr-2\"\r\n                            onClick={()=> this.updatePublished(false)}>UnPublish</button>\r\n                        ) : (\r\n                            <button className=\"badge badge-primary mr-2\"\r\n                            onClick={()=> this.updatePublished(true)}>Publish</button>\r\n                        )}\r\n\r\n                        <button className=\"badge badge-danger mr-2\"\r\n                        onClick={this.deleteTutorial}>Delete</button>\r\n                        <button type=\"submit\" className=\"badge badge-success\"\r\n                        onClick={this.updateTutorial}>Update</button>\r\n                        <p>{this.state.message}</p>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <br/>\r\n                        <p>Please Click on a Tutorial...</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tutorial;","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport TutorialDataService from \"../services/tutorial-service\";\r\n\r\nclass TutorialList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n        this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n        this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n        this.searchTitle = this.searchTitle.bind(this);\r\n\r\n        this.state = {\r\n            tutorials: [],\r\n            currentTutorial: null,\r\n            currentIndex: -1,\r\n            searchTitle: \"\"\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.retrieveTutorials();\r\n    };\r\n\r\n    onChangeSearchTitle(e){\r\n        const searchTitle = e.target.value;\r\n\r\n        this.setState({\r\n            searchTitle: searchTitle\r\n        })\r\n    };\r\n\r\n    retrieveTutorials(){\r\n        TutorialDataService.getAll()\r\n        .then(response => {\r\n            this.setState({\r\n                tutorials: response.data\r\n            })\r\n            console.log(response.data)\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    refreshList(){\r\n        this.retrieveTutorials();\r\n        this.setState({\r\n            currentTutorial: null,\r\n            currentIndex: -1\r\n        })\r\n    };\r\n\r\n    setActiveTutorial(tutorial, index){\r\n        this.setState({\r\n            currentTutorial: tutorial,\r\n            currentIndex: index \r\n        })\r\n    };\r\n\r\n    removeAllTutorials(){\r\n        TutorialDataService.deleteAll()\r\n        .then(response => {\r\n            console.log(response.data)\r\n            this.refreshList()\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    searchTitle(){\r\n        TutorialDataService.findByTitle(this.state.searchTitle)\r\n        .then(response => {\r\n            this.setState({\r\n                tutorials: response.data \r\n            })\r\n            console.log(response.data)\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    };\r\n\r\n    render(){\r\n        const {searchTitle, currentIndex, currentTutorial, tutorials} = this.state \r\n\r\n        return(\r\n            <div className=\"list row\">\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <input \r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search by title\"\r\n                        value={searchTitle}\r\n                        onChange={this.onChangeSearchTitle} />\r\n\r\n                        <div className=\"input-group-append\">\r\n                            <button type=\"button\" className=\"btn btn-outline-secondary\"\r\n                            onClick={this.searchTitle}>Search</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <h4>Tutorials List</h4>\r\n                    <ul className=\"list-group\">\r\n                        {tutorials && tutorials.map((tutorial, index) => (\r\n                            <li\r\n                            className={\"list-group-item \" + (index === currentIndex ? \"active\" : \"\")}\r\n                            onClick={()=> this.setActiveTutorial(tutorial, index)} key={index}>\r\n                                {tutorial.title}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <button className=\"m-3 btn btn-sm btn-danger\"\r\n                    onClick={this.removeAllTutorials}>Remove All</button>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    {currentTutorial ? (\r\n                        <div>\r\n                            <h4>Tutorial</h4>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Title:</strong>\r\n                                </label>{\" \"}\r\n                                {currentTutorial.title}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Description:</strong>\r\n                                </label>{\" \"}\r\n                                {currentTutorial.description}\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <strong>Status:</strong>\r\n                                </label>{\" \"}\r\n                                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n                            </div>\r\n\r\n                            <Link to={`/tutorials/${currentTutorial.id}`}\r\n                            className=\"badge badge-warning\">\r\n                                Edit\r\n                            </Link>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <br/>\r\n                            <p>Please Click on a Tutorial...</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default TutorialList;","import React, {Component} from \"react\";\r\nimport {Redirect, withRouter, Link} from \"react-router-dom\";\r\nimport axiosInstance from \"../http-common\";\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            redirect: null,\r\n            errors: {},\r\n            message: \"\"\r\n        }\r\n    };\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value \r\n        })\r\n    };\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        axiosInstance.post(\"/token/obtain/\", {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        })\r\n        .then(response => {\r\n            axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + response.data.access;\r\n            localStorage.setItem(\"access_token\", response.data.access);\r\n            localStorage.setItem(\"refresh_token\", response.data.refresh)\r\n            this.setState({\r\n                username: \"\",\r\n                password: \"\",\r\n                redirect: \"/\"\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n            this.setState({\r\n                errors: e.response.data,\r\n                message: `Please enter a valid username or password!`\r\n            })\r\n        })\r\n    };\r\n\r\n    render(){\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n\r\n        return(\r\n            <div className=\"submit-form\">\r\n                <h3>Login Page</h3>\r\n                <br></br>\r\n                 <p style={{color: \"red\"}}>{this.state.errors ? this.state.message : null}</p>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Username:\r\n                        <input className=\"form-control\" type=\"text\" name=\"username\" value={this.state.username}\r\n                        onChange={this.handleChange} />\r\n                        <p style={{color: \"red\"}}>{this.state.errors.username ? this.state.errors.username : null}</p>\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Password:\r\n                        <input className=\"form-control\"  type=\"password\" name=\"password\" value={this.state.password}\r\n                        onChange={this.handleChange} />\r\n                        <p style={{color: \"red\"}}>{this.state.errors.password ? this.state.errors.password : null}</p>\r\n                    </label>\r\n                    </div>\r\n                    <p>Don't have an Account? <Link to={`/signup`}>Register</Link></p>\r\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmit}>Login</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Login);","import React, {Component} from \"react\";\r\nimport {Redirect, withRouter, Link} from \"react-router-dom\";\r\nimport axiosInstance from \"../http-common\";\r\n\r\nclass Signup extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            redirect: null,\r\n            errors: {}\r\n        }\r\n    };\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value \r\n        })\r\n    };\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        axiosInstance.post(\"/user/create/\", {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        })\r\n        .then(response => {\r\n            this.setState({\r\n                username: \"\",\r\n                password: \"\",\r\n                redirect: \"/login\"\r\n            })\r\n            return response;\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n            this.setState({\r\n                errors: e.response.data\r\n            })\r\n        })\r\n    };\r\n\r\n    render(){\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n\r\n        return(\r\n            <div className=\"submit-form\">\r\n                <h3>Signup Page</h3>\r\n                <br></br>\r\n                <form>\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Username:\r\n                        <input className=\"form-control\" type=\"text\" name=\"username\" value={this.state.username}\r\n                        onChange={this.handleChange} />\r\n                        <p style={{color: \"red\"}}>{this.state.errors.username ? this.state.errors.username : null}</p>\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Email:\r\n                        <input className=\"form-control\" type=\"email\" name=\"email\" value={this.state.email}\r\n                        onChange={this.handleChange} />\r\n                        <p style={{color: \"red\"}}>{this.state.errors.email ? this.state.errors.email : null}</p>\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>\r\n                        Password:\r\n                        <input className=\"form-control\" type=\"password\" name=\"password\" value={this.state.password}\r\n                        onChange={this.handleChange} />\r\n                        <p style={{color: \"red\"}}>{this.state.errors.password ? this.state.errors.password : null}</p>\r\n                    </label>\r\n                    </div>\r\n                    <p>Already have an Account? <Link to={`/login`}>Login</Link></p>\r\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmit}>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Signup);","import React, {Component} from \"react\";\r\nimport {Switch, Link, Route, Redirect, withRouter} from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport AddTutorial from \"./components/add-tutorial\";\r\nimport Tutorial from \"./components/tutorial\";\r\nimport TutorialList from \"./components/tutorials-list\";\r\nimport Login from \"./components/login\";\r\nimport Signup from \"./components/signup\";\r\nimport axiosInstance from \"./http-common\";\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleLogout = this.handleLogout.bind(this)\r\n\r\n        this.state = {\r\n            redirect: null\r\n        }\r\n    };\r\n\r\n    async handleLogout(){\r\n        try {\r\n            const response = await axiosInstance.post(\"/blacklist/\", {\r\n                \"refresh_token\": localStorage.getItem(\"refresh_token\")\r\n            });\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"refresh_token\");\r\n            axiosInstance.defaults.headers[\"Authorization\"] = null;\r\n            this.setState({\r\n                redirect: this.props.history.push(\"/login\")\r\n            })\r\n            return response;\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    render(){\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n\r\n        const access_token = localStorage.getItem(\"access_token\")\r\n\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                    <a href=\"/\" className=\"navbar-brand\">Home</a>\r\n                        {access_token ? (\r\n                            <div className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                        <Link to={`/tutorials`} className=\"nav-link\">Tutorials</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to={`/add`} className=\"nav-link\">Add</Link>\r\n                    </li>\r\n                    <button id=\"btn-logout\" className=\"btn btn-outline-danger\" \r\n                    onClick={this.handleLogout}>Logout</button>\r\n                        </div>\r\n                        ) : (\r\n                            <div className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                            <Link to={`/login`} className=\"nav-link\">Login</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/signup`} className=\"nav-link\">Signup</Link>\r\n                        </li>\r\n                        </div>\r\n                        )}\r\n                </nav>\r\n\r\n                <div className=\"container mt-3\">\r\n                    <Switch>\r\n                        <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialList} />\r\n                        <Route exact path=\"/add\" component={AddTutorial} />\r\n                        <Route path=\"/tutorials/:id\" component={Tutorial} />\r\n                        <Route exact path={\"/login\"} component={Login} />\r\n                        <Route exact path={\"/signup\"} component={Signup} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default withRouter(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n \nReactDOM.render(\n  <BrowserRouter>\n  <App/>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();"],"sourceRoot":""}